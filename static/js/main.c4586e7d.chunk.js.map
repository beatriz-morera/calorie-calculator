{"version":3,"sources":["components/InfoCollector/Step.js","components/InfoCollector/Gender.js","components/InfoCollector/Input.js","components/InfoCollector/Activities.js","components/InfoCollector/StepContainer.js","components/Button.js","components/Result.js","App.js","calculator.js","serviceWorker.js","index.js"],"names":["Step","value","title","className","Gender","onChange","useState","active","setActive","changeColorHandler","ev","target","innerText","onClick","Input","unit","setInfo","maxLength","placeholder","onBlur","parseInt","Activities","id","StepContainer","state","setState","useEffect","onChangeHandler","name","old","Button","onCalculate","Result","calories","App","setCalories","result","setResult","darkMode","setDarkMode","values","gender","age","height","weight","activity","Math","round","calculator","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2MAiBeA,EAfF,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MACrB,OACE,yBAAKC,UAAU,6BACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,4BACb,0BAAMA,UAAU,6BAA6BF,GAC7C,uBAAGE,UAAU,cAAcD,QCiBxBE,EAxBA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACHC,qBADG,mBACxBC,EADwB,KAChBC,EADgB,KAEzBC,EAAqB,SAAAC,GACzBF,EAAUE,EAAGC,OAAOC,WACpBP,EAASK,EAAGC,OAAOC,YAErB,OACE,wBAAIT,UAAU,eACZ,wBACEA,UAAsB,SAAXI,EAAoB,SAAW,iBAC1CM,QAASJ,GAFX,QAMA,wBACEN,UAAsB,WAAXI,EAAsB,gBAAkB,iBACnDM,QAASJ,GAFX,YCKSK,EAnBD,SAAC,GAA+B,IAA7Bb,EAA4B,EAA5BA,MAAOc,EAAqB,EAArBA,KAAMV,EAAe,EAAfA,SAAe,EACvBC,mBAAS,IAApBU,EADkC,oBAM3C,OACE,yBAAKb,UAAU,mBACb,2BACEA,UAAU,QACVc,UAAU,IACVC,YAAajB,EACbkB,OAVoB,SAAAT,GACxBM,EAAQN,EAAGC,OAAOV,OAClBI,EAASe,SAASV,EAAGC,OAAOV,WAU1B,2BAAIc,KCqCKM,EAnDI,SAAC,GAAkB,IAAhBhB,EAAe,EAAfA,SAAe,EACPC,qBADO,mBAC5BC,EAD4B,KACpBC,EADoB,KAE7BC,EAAqB,SAAAC,GACzBF,EAAUE,EAAGC,OAAOW,IACpBjB,EAASK,EAAGC,OAAOW,KAErB,OACE,wBAAInB,UAAU,mBACZ,wBACEmB,GAAG,MACHnB,UAAsB,QAAXI,EAAmB,kBAAoB,mBAClDM,QAASJ,GAET,uBAAGN,UAAU,uBAAb,kBALF,uCAQA,wBACEmB,GAAG,MACHnB,UAAsB,QAAXI,EAAmB,kBAAoB,mBAClDM,QAASJ,GAET,uBAAGN,UAAU,uBAAb,qBALF,2CAQA,wBACEmB,GAAG,MACHnB,UAAsB,QAAXI,EAAmB,kBAAoB,mBAClDM,QAASJ,GAET,uBAAGN,UAAU,uBAAb,UALF,uCAQA,wBACEmB,GAAG,MACHnB,UAAsB,QAAXI,EAAmB,kBAAoB,mBAClDM,QAASJ,GAET,uBAAGN,UAAU,uBAAb,eALF,2CAQA,wBACEmB,GAAG,MACHnB,UAAsB,QAAXI,EAAmB,kBAAoB,mBAClDM,QAASJ,GAET,uBAAGN,UAAU,uBAAb,WALF,6BCLSoB,EA/BO,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,EACZC,mBAAS,IADG,mBAC/BkB,EAD+B,KACxBC,EADwB,KAGtCC,qBAAU,WACJrB,GACFA,EAASmB,KAEV,CAACA,EAAOnB,IAEX,IAAMsB,EAAkB,SAAAC,GAAI,OAAI,SAAA3B,GAAK,OACnCwB,GAAS,SAAAI,GAAG,sBAAUA,EAAV,eAAgBD,EAAO3B,SAErC,OACE,yBAAKE,UAAU,kBACb,uBAAGA,UAAU,+BAAb,+DAGA,kBAAC,EAAD,CAAMF,MAAO,EAAGC,MAAO,YACvB,kBAAC,EAAD,CAAQG,SAAUsB,EAAgB,YAClC,kBAAC,EAAD,CAAM1B,MAAO,EAAGC,MAAO,qBACvB,kBAAC,EAAD,CAAOD,MAAO,GAAIc,KAAM,QAASV,SAAUsB,EAAgB,SAC3D,kBAAC,EAAD,CAAM1B,MAAO,EAAGC,MAAO,sBACvB,kBAAC,EAAD,CAAOD,MAAO,IAAKc,KAAM,KAAMV,SAAUsB,EAAgB,YACzD,kBAAC,EAAD,CAAM1B,MAAO,EAAGC,MAAO,2BACvB,kBAAC,EAAD,CAAOD,MAAO,GAAIc,KAAM,KAAMV,SAAUsB,EAAgB,YACxD,kBAAC,EAAD,CAAM1B,MAAO,EAAGC,MAAO,uCACvB,kBAAC,EAAD,CAAYG,SAAUsB,EAAgB,gBCpB7BG,EAVA,SAAC,GAA4B,IAA1B7B,EAAyB,EAAzBA,MAAO8B,EAAkB,EAAlBA,YACvB,OACE,yBAAK5B,UAAU,oBACb,4BAAQA,UAAU,SAASU,QAASkB,GACjC9B,KCMM+B,EAVA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUhC,EAAY,EAAZA,MAC1B,OACE,yBAAKE,UAAU,eACb,uBAAGA,UAAU,wBAAwB8B,GACrC,uBAAG9B,UAAU,wBAAb,0BACA,uBAAGA,UAAU,wBAAwBF,K,aC2C5BiC,EAxCH,WAAO,IAAD,EACgB5B,mBAAS,OADzB,mBACT2B,EADS,KACCE,EADD,OAEY7B,mBAAS,IAFrB,mBAET8B,EAFS,KAEDC,EAFC,OAGgB/B,oBAAS,GAHzB,mBAGTgC,EAHS,KAGCC,EAHD,KAIhB,OACE,0BAAMpC,UAAWmC,EAAW,YAAc,IACxC,yBAAKnC,UAAU,cACb,kBAAC,IAAD,CAAQE,SAAUkC,IAClB,+DAEF,kBAAC,EAAD,CAAelC,SAAUgC,IACzB,kBAAC,EAAD,CACEpC,MAAO,uCACP8B,YAAa,kBAAMI,ECvBpB,SAAoBK,GAAS,IAO9BP,EANEQ,EAA0CD,EAA1CC,OAAQC,EAAkCF,EAAlCE,IAAKC,EAA6BH,EAA7BG,OAAQC,EAAqBJ,EAArBI,OAAQC,EAAaL,EAAbK,SAEnC,IAAKJ,IAAWC,IAAQC,IAAWC,IAAWC,EAC5C,MAAO,gBAUT,OANe,SAAXJ,EACFR,EAAW,EAAI,GAAKW,EAAS,IAAMD,EAAS,EAAID,EAC5B,WAAXD,IACTR,EAAW,GAAKW,EAAS,KAAOD,EAAS,EAAID,EAAM,KAG7CG,GACN,IAAK,MACHA,EAAW,IACX,MACF,IAAK,MACHA,EAAW,MACX,MACF,IAAK,MACHA,EAAW,KACX,MACF,IAAK,MACHA,EAAW,KACX,MACF,IAAK,MACHA,EAAW,IACX,MACF,QACEA,EAAW,KAIf,OAFAZ,GAAYY,EAELC,KAAKC,MAAMd,GDZmBe,CAAWZ,OAE5C,uBAAGjC,UAAU,eAAb,wBACA,kBAAC,EAAD,CAAMF,MAAO,MACb,uBAAGE,UAAU,mBAAb,eACA,kBAAC,EAAD,CACE8B,SAA8B,kBAAbA,EAAwBA,EAAW,IAAMA,EAC1DhC,MACE,0EAGJ,uBAAGE,UAAU,mBAAb,mBACA,kBAAC,EAAD,CACE8B,SAAUA,EACVhC,MACE,kFAGJ,uBAAGE,UAAU,mBAAb,eACA,kBAAC,EAAD,CACE8B,SAA8B,kBAAbA,EAAwBA,EAAW,IAAMA,EAC1DhC,MAAM,4EEhCMgD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.c4586e7d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Step = ({ value, title }) => {\r\n  return (\r\n    <div className=\"calculator-step-container\">\r\n      <div className=\"calculator-step\">\r\n        <div className=\"separator-line\">\r\n          <div className=\"separator-icon-container\">\r\n            <span className=\"separator-low-text-number\">{value}</span>\r\n            <p className=\"step-title\">{title}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Step;\r\n","import React, { useState } from 'react';\r\n\r\nconst Gender = ({ onChange }) => {\r\n  const [active, setActive] = useState();\r\n  const changeColorHandler = ev => {\r\n    setActive(ev.target.innerText);\r\n    onChange(ev.target.innerText);\r\n  };\r\n  return (\r\n    <ul className=\"gender-list\">\r\n      <li\r\n        className={active === 'MALE' ? 'active' : 'gender-options'}\r\n        onClick={changeColorHandler}\r\n      >\r\n        MALE\r\n      </li>\r\n      <li\r\n        className={active === 'FEMALE' ? 'female-active' : 'gender-options'}\r\n        onClick={changeColorHandler}\r\n      >\r\n        FEMALE\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Gender;\r\n","import React, { useState } from 'react';\r\n\r\nconst Input = ({ value, unit, onChange }) => {\r\n  const [, setInfo] = useState('');\r\n  const changeInfoHandler = ev => {\r\n    setInfo(ev.target.value);\r\n    onChange(parseInt(ev.target.value));\r\n  };\r\n  return (\r\n    <div className=\"input-container\">\r\n      <input\r\n        className=\"input\"\r\n        maxLength=\"3\"\r\n        placeholder={value}\r\n        onBlur={changeInfoHandler}\r\n      ></input>\r\n      <p>{unit}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { useState } from 'react';\r\n\r\nconst Activities = ({ onChange }) => {\r\n  const [active, setActive] = useState();\r\n  const changeColorHandler = ev => {\r\n    setActive(ev.target.id);\r\n    onChange(ev.target.id);\r\n  };\r\n  return (\r\n    <ul className=\"activities-list\">\r\n      <li\r\n        id=\"1st\"\r\n        className={active === '1st' ? 'active-activity' : 'activities-items'}\r\n        onClick={changeColorHandler}\r\n      >\r\n        <p className=\"activities-headline\">Lightly active</p>Mostly sitting\r\n        (e.g. office worker)\r\n      </li>\r\n      <li\r\n        id=\"2nd\"\r\n        className={active === '2nd' ? 'active-activity' : 'activities-items'}\r\n        onClick={changeColorHandler}\r\n      >\r\n        <p className=\"activities-headline\">Moderately active</p>Mostly standing\r\n        (e.g. teacher, cashier)\r\n      </li>\r\n      <li\r\n        id=\"3rd\"\r\n        className={active === '3rd' ? 'active-activity' : 'activities-items'}\r\n        onClick={changeColorHandler}\r\n      >\r\n        <p className=\"activities-headline\">Active</p>Mostly walking (e.g. sales,\r\n        server)\r\n      </li>\r\n      <li\r\n        id=\"4th\"\r\n        className={active === '4th' ? 'active-activity' : 'activities-items'}\r\n        onClick={changeColorHandler}\r\n      >\r\n        <p className=\"activities-headline\">Very Active</p>Physically demanding\r\n        job (e.g. builder)\r\n      </li>\r\n      <li\r\n        id=\"5th\"\r\n        className={active === '5th' ? 'active-activity' : 'activities-items'}\r\n        onClick={changeColorHandler}\r\n      >\r\n        <p className=\"activities-headline\">Athlete</p>Powerful daily training\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Activities;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Step from './Step';\r\nimport Gender from './Gender';\r\nimport Input from './Input';\r\nimport Activities from './Activities';\r\n\r\nconst StepContainer = ({ onChange }) => {\r\n  const [state, setState] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (onChange) {\r\n      onChange(state);\r\n    }\r\n  }, [state, onChange]);\r\n\r\n  const onChangeHandler = name => value =>\r\n    setState(old => ({ ...old, [name]: value }));\r\n\r\n  return (\r\n    <div className=\"step-container\">\r\n      <p className=\"step-container-instructions\">\r\n        For accurate calculation, we need some basic info about you\r\n      </p>\r\n      <Step value={1} title={'You are'} />\r\n      <Gender onChange={onChangeHandler('gender')} />\r\n      <Step value={2} title={'How old are you?'} />\r\n      <Input value={21} unit={'Years'} onChange={onChangeHandler('age')} />\r\n      <Step value={3} title={'How tall are you?'} />\r\n      <Input value={170} unit={'cm'} onChange={onChangeHandler('height')} />\r\n      <Step value={4} title={'How much do you weigh?'} />\r\n      <Input value={69} unit={'kg'} onChange={onChangeHandler('weight')} />\r\n      <Step value={5} title={'How active are you on daily basis?'} />\r\n      <Activities onChange={onChangeHandler('activity')} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StepContainer;\r\n","import React from 'react';\r\n\r\nconst Button = ({ value, onCalculate }) => {\r\n  return (\r\n    <div className=\"button-container\">\r\n      <button className=\"button\" onClick={onCalculate}>\r\n        {value}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nconst Result = ({ calories, value }) => {\r\n  return (\r\n    <div className=\"result-info\">\r\n      <p className=\"result-description-1\">{calories}</p>\r\n      <p className=\"result-description-2\">Calorie intake per day</p>\r\n      <p className=\"result-description-3\">{value}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React, { useState } from 'react';\r\n\r\nimport StepContainer from './components/InfoCollector/StepContainer';\r\nimport Button from './components/Button';\r\nimport Step from './components/InfoCollector/Step';\r\nimport Result from './components/Result';\r\n\r\nimport { calculator } from './calculator';\r\nimport { Switch } from 'antd';\r\n\r\nconst App = () => {\r\n  const [calories, setCalories] = useState('...');\r\n  const [result, setResult] = useState({});\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  return (\r\n    <main className={darkMode ? 'dark-mode' : ''}>\r\n      <div className=\"main-title\">\r\n        <Switch onChange={setDarkMode} />\r\n        <p>Daily Calorie Intake Calculator</p>\r\n      </div>\r\n      <StepContainer onChange={setResult} />\r\n      <Button\r\n        value={'Calculate your needed calorie intake'}\r\n        onCalculate={() => setCalories(calculator(result))}\r\n      />\r\n      <p className=\"text-result\">Your personal result</p>\r\n      <Step value={'?'} />\r\n      <p className=\"result-headline\">Lose weight</p>\r\n      <Result\r\n        calories={typeof calories === 'number' ? calories - 500 : calories}\r\n        value={\r\n          'This range of daily calories will enable you to lose 0.5 kg per week.'\r\n        }\r\n      />\r\n      <p className=\"result-headline\">Maintain weight</p>\r\n      <Result\r\n        calories={calories}\r\n        value={\r\n          'This range of daily calories will enable you to maintain your current weight.'\r\n        }\r\n      />\r\n      <p className=\"result-headline\">Gain weight</p>\r\n      <Result\r\n        calories={typeof calories === 'number' ? calories + 500 : calories}\r\n        value=\"This range of daily calories will enable you to gain 0.5 kg per week.\"\r\n      />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","export function calculator(values) {\r\n  let { gender, age, height, weight, activity } = values;\r\n\r\n  if (!gender || !age || !height || !weight || !activity) {\r\n    return 'missing data!';\r\n  }\r\n\r\n  let calories;\r\n  if (gender === 'MALE') {\r\n    calories = 5 + 10 * weight + 6.5 * height - 5 * age;\r\n  } else if (gender === 'FEMALE') {\r\n    calories = 10 * weight + 6.25 * height - 5 * age - 161;\r\n  }\r\n\r\n  switch (activity) {\r\n    case '1st':\r\n      activity = 1.2;\r\n      break;\r\n    case '2nd':\r\n      activity = 1.375;\r\n      break;\r\n    case '3rd':\r\n      activity = 1.55;\r\n      break;\r\n    case '4th':\r\n      activity = 1.72;\r\n      break;\r\n    case '5th':\r\n      activity = 1.9;\r\n      break;\r\n    default:\r\n      activity = null;\r\n  }\r\n  calories *= activity;\r\n\r\n  return Math.round(calories);\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}